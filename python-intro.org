#+SETUPFILE: htmlslidy.org
#+TITLE: Python Intro
#+AUTHOR: Dov Grobgeld
#+STYLE: <link rel='stylesheet' href='blue.css' type='text/css'  /> <link rel='stylesheet' href='dov.css' type='text/css'  /> 
#+BIND: org-htmlslidy-html-preamble-footer "<h1>Python Intro</h1>"
#+BIND: org-export-html-preamble "</div><div class='background'><img alt='' id='head-icon' src='graphics/python-logo.png'/><img alt='' id='head-logo' src='graphics/dov-logo.png' /></a></object></div>"
#+BIND: org-export-html-postamble ""

* Intro to Python
 - Written by Guido van Rossum in late 80s, currently employed by Google.
 - Free as in bear and speech (libre)
 - Popularity grows in last few years.
 - Simpler than other similarly niched language, e.g. Perl
 - My favorite language for intro to programming.
 - Lectures based on the book "Learning Python"
 
* How to run
- The python interpreter
#+begin_example 
c:> python
Python 2.6.2 (r262:71600, Jan 25 2010, 18:46:45) 
[GCC 4.4.2 20091222 (Red Hat 4.4.2-20)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> 
#+end_example
- You can create text with any editor
- A few IDE's - None perfect.
 + IDLE 
 + Spyder
- Can be used interactively.

* Interactive session 1
 - Can be ran through "ipython" command or in IDE.
 - As a calculator
#+begin_example
>>> print "Hello"
Hello
>>> print 42*59
2478
#+end_example

 - Immediate errors
#+begin_example
>>> foo()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'foo' is not defined
#+end_example

* Interactive session 2
 - May import modules and use these
#+begin_example
>>> import math
>>> math.sin(math.pi/4)**2
0.49999999999999989
>>> from math import *
>>> sin(pi/4)**2
#+end_example

* Creating python source file
 - Create in any text file, example foo.txt .
#+begin_src python
import math

for i in range(5):
   x = 1.0*i/20
   y = math.sin(x)
   print x,",",y
#+end_src

* Running python source from the command line
#+begin_example 
c:\> cd my_python
c:\> python foo.py
> python foo.py 
0.0 , 0.0
0.05 , 0.0499791692707
0.1 , 0.0998334166468
0.15 , 0.149438132474
0.2 , 0.198669330795
#+end_example
  
* Basic syntax
 - Variables
  + string (str), integer (int), floating point (float)
  + tuples 
  + lists
  + dictionaries
  + Sometimes auto conversions.
 - Flow control
  + if, while, for
 - Functions
  + def 
  
* String interpolation
 - Strings are formatted through ~"string"%(parameters)~ .
 - Example
#+begin_src python
print "Pm = %.3fW Isc=%.2fA"%(Pm,Isc)
#+end_src
 - Formatting:
  + %d - Integer
  + %s - String
  + %s - Floating point
 
* File IO
 - Function ~fh = open("foo.txt")~ opens a file for reading
 - Function ~fh = open("foo.txt","w")~ opens a file for writing
 - Close a file through ~fh.close()~
 - Write through ~fh.write(string)~

* Modules
 - Pulling in additional functionality
 - E.g. math libraries:
#+begin_example 
import math
#+end_example
 - Python has a huge set of standard modules. Examples:
  + os - Operating system interface.
  + sys - System routines.
  + datetime - Date and time manipulation
  + re - Regular expressions - string matching.
  + httplib - http client for pulling data off the internet.
 - Lots of modules are available from the internet.

* Classes - Object oriented programming:
 - A class encapsulates data and provide accessors for getting it and calculating based on the contained data.
 - Example
#+begin_src python 
import datetime
# Creation of a date time initialized to todays date
d = datetime.datetime.now()
# Member access
print d.year
print d.isoformat()
week_day_names = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']
print week_day_names[d.weekday()]
#+end_src

* TCP/IP communication
 - Easy to open sockets and interact through python.
 - This simple method does not take care of dead locks and timeouts!
#+begin_src python
sh = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
address,port = "192.168.16.21", 86
sh.connect(((address,port))
sh.write("d1\n")
reply = sh.recv(1024)
print reply
#+end_src

* Interesting classes from the internet for solar simulations
 - astral - Calculations for the position of the sun
 - numpy, scipy - Scientific python
 - matplotlib - Scientific quality graphics
 
